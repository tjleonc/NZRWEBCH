@charset "UTF-8";
#footer {
  background-color: #4ba2e7;
  margin-top: auto;
  width: 100%;
  height: auto;
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 0 20px;
}
#footer .footerLinks {
  display: flex;
  justify-content: flex-start;
  font-family: "Franklin Gothic Medium", "Arial Narrow", Arial, sans-serif;
}
#footer .footerLinks a {
  text-decoration: none;
  color: #fff;
}

/*NAVBAR*/
.navbar ul li a:hover {
  color: black;
  font-size: 22px;
  transition: 1s;
}

.navbar {
  color: black;
  transition: 1s;
}

/*FIN NAVBAR*/
/*Acá veremos lo que hace Sass:*/
.pruebaSass {
  width: 100%;
  height: 100vh;
  background-color: green;
}
.pruebaSass article div img {
  width: 200px;
  height: 200px;
}
.pruebaSass article div img:hover {
  height: 100px;
}
.pruebaSass article div p {
  color: white;
}
.pruebaSass article div p:hover { /*El & nos indica que toma el item anterior, en este caso la p (p:hover)*/
  color: black;
}

.contenedor {
  width: 80%;
  margin: auto;
}

.articulo__venta {
  margin-top: 10px;
  border: 1px solid #ddd;
  border-radius: 8px;
  overflow: hidden;
  width: 350px;
}

.articulo__venta img {
  width: 250px;
  height: 210px;
  object-fit: fill;
  margin-left: 10px;
}

.ventas .contenedor {
  display: grid;
}

.boton-agregar {
  background-color: #e44d26;
  color: #fff;
  border: none;
  padding: 15px;
  margin-bottom: 10px;
  width: 100%;
  cursor: pointer;
  font-size: 16px;
}

/*MEDIA QUERIES PAG NEUMATICOS*/
/*Cambiar el tamaño de las imagenes para dispositivos moviles*/
/* Extra small devices (phones, 600px and down) a */
@media only screen and (max-width: 600px) {
  .ventas .contenedor {
    grid-template-columns: repeat(1, 100%);
  }
}
/* Small devices (portrait tablets and large phones, 600px and up) */
@media only screen and (min-width: 600px) {
  .ventas .contenedor {
    grid-template-columns: repeat(1, 100%);
  }
}
/* Medium devices (landscape tablets, 768px and up) */
@media only screen and (min-width: 768px) {
  .ventas .contenedor {
    grid-template-columns: repeat(2, 60%);
  }
}
/* Large devices (laptops/desktops, 992px and up) */
@media only screen and (min-width: 992px) {
  .ventas .contenedor {
    grid-template-columns: repeat(3, 33.3%);
  }
  .articulo__venta {
    border: 1px solid #ddd;
    border-radius: 8px;
    overflow: hidden;
    width: 270px;
  }
}
/* Extra large devices (large laptops and desktops, 1200px and up) */
@media only screen and (min-width: 1200px) {
  .ventas .contenedor {
    grid-template-columns: repeat(3, 33.3%);
  }
  .articulo__venta {
    border: 1px solid #ddd;
    border-radius: 8px;
    overflow: hidden;
    width: 270px;
  }
}
@media only screen and (min-width: 1400px) {
  .ventas .contenedor {
    grid-template-columns: repeat(4, 25%);
  }
}
/*Se usa @extend para replicar un estilo*/
/*@Mixin: flex-align{
    display: flex;
    justify-content: center;
    align-items: center;
}
Basicamente creamos una variable que contiene propiedades y valores que se puede reutilizar en el momento que queramos
utilizando @include flex-align; (que en este caso es el nombre de nuestro mixin)


@mixin sizes($width, $height){
    width:$width;
    height:$height;
}

@include sizes(150px, 150px)

acá creamos un mixin para que nosotros le demos la variable que nosotros queramos al momento de llamar
asi nos ahorramos dos lineas de codigo en el momento de utilizar height y width:D
*/
.carousel-item {
  max-height: 500px;
}

h3 {
  color: #fff;
}

h5 {
  color: #fff;
}

ul, ol {
  list-style: none;
}

.card {
  box-shadow: rgba(50, 50, 93, 0.25) 0px 2px 5px -1px, rgba(0, 0, 0, 0.3) 0px 1px 3px -1px;
  margin-bottom: 10%;
}

body {
  margin: 0;
  padding: 0;
}

/*Comando sass: sass --watch sass/style.scss css/style.css*/

/*# sourceMappingURL=style.css.map */
